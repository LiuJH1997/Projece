import '../less/hcx_normalize.less';
import '../less/hcx_common.less';
import '../less/ljh_login.less';
const loader = require('./hcx_loadhtml')
$(function(){
    loader.loadCommon();
    let isLogin  = true;
    // 注册
    $(".go_register").on("click",() => {
        isLogin = false;
        $(".go_login").removeClass("hidden");
        $(".go_register").addClass("hidden");
        $(".login_title").text("注册");
        $(".repay").text("已经是我们的会员？");
        $(".account").text("注册账号");
        $(".password").text("登录密码");
        $(".confirm").removeClass("hidden");
        $(".forget").addClass("hidden");
        $(".login_register_btn").text("提交");
        document.title = "户里·家-注册";
    });
    //登录
    $(".go_login").on("click",() => {
        isLogin = true;
        $(".go_login").addClass("hidden");
        $(".go_register").removeClass("hidden");
        $(".login_title").text("登录");
        $(".login_text").text("还不是我们的会员？");
        $(".account").text("账号");
        $(".password").text("密码");
        $(".confirm").addClass("hidden");
        $(".login_register_btn").text("登录");
        document.title = "户里·家-登录";
    });

     // 注册
     $(".input-box input").on("blur", (e) => {
        let $target = $(e.target);
        if(!isLogin) {
            if(!Validate.test($target.prop("className"), $target.val())) {
                $target.parent().addClass("error");
            }else {
                $target.parent().removeClass("error");
            }
        }
    });

    $(".login_register_btn").on("click", () => {
        if(isLogin) {
            if(!$(".username").val() || !$(".password").val()) {
                console.log("请完善信息！");
            }else {
                Bmob.User.logIn($(".username").val(), $(".password").val(), {
                    success: (user) => {
                        alert("登录成功");
                        location.href = "../index.html";
                    },
                    error: (user,error) => {
                       alert("用户不存在");
                    }
                });

            }
        }else {
            let isThough = true, isEmpty = false;
            // 判断是否验证通过
            $(".input-box").each((index, el) => {    
                if($(el).hasClass("error")) {
                    isThough = false;
                    return false;
                }  
            });
            // 判断是否完善信息
            $(".input-box input").each((index, el) => {
                if(!$(el).val()) {
                    isEmpty = true;
                    return false;
                }
            });
            if(isEmpty) {
                console.log("请完善信息！");
            }else if(!isThough) {
                console.log("信息不合法！");
            }else {
                // console.log("请注册！");
                //注册用户
                //设置用户属性
                let user = new Bmob.User();
                user.set("username",$(".username").val());
                user.set("password",$(".password").val());

                //执行注册
                user.signUp(null,{
                    //ES6的语法  -- 通过babe转换
                    success : (user) => {
                        alert("成功");
                        location.href = "../index.html"

                    },
                    error: (user,error) => {
                        switch (error.code){
                            case 202:{
                                alertMsg = "用户名已存在";
                            }break;
                            case 203:{
                                alertMsg = "邮箱已经存在";
                            }break;
                        }
                       
                    }
                })

            }

        }
    })  
})

class Validate {
    constructor() {}
    static test(type, str) {
        let res = null;
        switch (type) {
            case "username": {
                // 1. 用户名正则，4到16位（字母，数字，下划线，减号）
                res = /^[A-Za-z0-9_-]{4,16}$/.test(str);
            } break;
            case "password": {
                // 2. 用户名正则，4到16位（字母，数字，下划线，减号）
                res = /^[A-Za-z0-9_-]{4,16}$/.test(str);
            } break;
        }
        return res;
    }
}
